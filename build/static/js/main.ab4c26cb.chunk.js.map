{"version":3,"sources":["static/twitter_square_blue.svg","logo.svg","config.js","components/FriendsCard.js","components/CommonCount.js","components/CommonFriends.js","services/apiUtil.js","services/userCalls.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","config","FriendsCard","props","console","log","Grid","container","direction","alignContent","alignItems","justify","spacing","style","overflowY","item","marginRight","Avatar","variant","src","avatar","display","width","height","border","Typography","component","color","name","fontWeight","screen_name","styling","fontFamily","CommonCount","cready","cloading","cloaded","ccount","CommonFriends","lg","xs","sm","md","loaded","loading","ready","cfriend_count","boxy","cfriends","map","value","index","key","id","padding","Paper","axios","require","qs","baseUrl","base","getCall","url","params","target","get","paramsSerializer","stringify","arrayFormat","findFriends","userName","cursor","count","userInitialState","twitterAvatar","disabled","error","error_msg","friends","friends_count","cFriendsInitialState","empty","buttonInitialState","label","App","useState","buttonState","setButtonState","user1","setUser1","user2","setUser2","cFriends","setCFriends","validateUserLength","length","useEffect","getAllFriends","sname","then","response","data","users","next_cursor","push","normalizeFriends","f","g","forEach","x","profile_image_url","findCommon","f1","f2","normalized1","normalized2","keys1","Object","keys","parseInt","keys2","smaller_key_set","large_object","common_friends","className","marginTop","alt","TextField","size","onChange","event","helperText","InputProps","startAdornment","InputAdornment","position","Button","backgroundColor","onClick","userName1","userName2","Array","isArray","u1","find","u2","protected","finishRace","Promise","all","catch","err","Divider","marginBottom","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","registration","unregister","message"],"mappings":"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","file":"static/js/main.ab4c26cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter_square_blue.116bea77.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","var config = {}\r\n\r\nconfig = {\r\n    'base': 'https://ferox-twitter-friends.herokuapp.com/',\r\n    // 'base': '/',\r\n}\r\n\r\nmodule.exports = config;\r\n","import React from 'react';\r\nimport { Avatar, Typography, Grid } from '@material-ui/core';\r\n\r\nfunction FriendsCard(props) {\r\n    console.log(props);\r\n    return (\r\n                <Grid container direction=\"row\" alignContent='flex-start' alignItems='flex-start' justify='flex-start' spacing={0} style={{overflowY: 'hidden'}}>\r\n                    <Grid item style={{marginRight: '12px'}}>\r\n                        {/* <a href={`https://twitter.com/${props.screen_name}`}> */}\r\n                        <Avatar variant=\"rounded\" src={props.avatar}\r\n                            style={{display: 'flex', width: '48px', height: '48px', border: '2px solid rgb(29, 161, 242)'}}></Avatar>\r\n                        {/* </a> */}\r\n                    </Grid>\r\n                    <Grid item>\r\n                            <Grid container direction=\"column\" alignItems='flex-start' spacing={0}>\r\n                                <Grid item>\r\n                                    <Typography variant=\"subtitle2\" component=\"span\" style={{color: 'rgb(29, 161, 242)'}}>\r\n                                        {props.name}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid>\r\n                                    <Typography variant=\"caption\" component=\"span\" style={{fontWeight: '500'}}>\r\n                                        @{props.screen_name}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n    )\r\n}\r\n\r\nexport default FriendsCard;\r\n","import React from 'react';\r\n\r\nconst styling = {\r\n    color: '#deb8b8',\r\n    fontFamily: 'inherit',\r\n    fontWeight: '400'\r\n}\r\n\r\n\r\nfunction CommonCount(props) {\r\n    if(props.cready && props.cloading){\r\n        return <h2 style={styling}>Loading...</h2>\r\n    }\r\n    if(props.cready && props.cloaded){\r\n        return <h2 style={styling}>You have {props.ccount} common friend(s).</h2>\r\n    }\r\n    if(props.cready){\r\n        return <h2 style={styling}>Waiting for you..</h2>\r\n    }\r\n    return (\r\n        <h1>Something's Wrong</h1>        \r\n    )\r\n}\r\n\r\nexport default CommonCount;\r\n","import React from 'react';\r\nimport { Grid, Paper } from '@material-ui/core';\r\nimport FriendsCard from './FriendsCard';\r\nimport CommonCount from './CommonCount';\r\n\r\n// loading: false,\r\n//   loaded: false,\r\n//   ready: true,\r\n\r\nfunction CommonFriends(props) {\r\n    console.log(props);\r\n\r\n    return (\r\n        <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={0}>\r\n            <Grid item lg={12} xs={12} sm={12} md={12}>\r\n                <CommonCount cloaded={props.loaded} cloading={props.loading} cready={props.ready} ccount={props.cfriend_count}></CommonCount>\r\n                <Grid container boxy='boxy' direction=\"row\" justify=\"center\" alignContent=\"center\" alignItems=\"center\">\r\n                {props.cfriends.map((value, index) => {\r\n                    return ( \r\n                        \r\n                            <Grid item lg={4} key={value.id} style={{padding: '10px'}}>\r\n                                <Paper>\r\n                                <FriendsCard {...value}></FriendsCard>\r\n                                </Paper>\r\n                            </Grid>\r\n                    )\r\n                })}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default CommonFriends;\r\n","var axios = require('axios')\r\nvar config = require('../config')\r\nvar qs = require('qs')\r\n\r\n// https://api.twitter.com/1.1/\r\nconst baseUrl = config.base;\r\n\r\nexport const getCall = (url, params) => {\r\n    var target = baseUrl + url;\r\n    return axios.get(target, {\r\n        params: {...params},\r\n        paramsSerializer: function (params) {\r\n            return qs.stringify(params, {arrayFormat: 'brackets'})\r\n        }\r\n    });\r\n};\r\n","import { getCall } from './apiUtil'\r\n\r\n// users/lookup.json?screen_name=ratclick,kliooskshfu\r\n// lookup users from array\r\nexport const findUsers = (userName1, userName2) => {\r\n    var params = {\r\n        screen_name: [userName1, userName2]\r\n    }\r\n    return getCall('findusers', params);\r\n};\r\n\r\nexport const findFriends = (userName, cursor) => {\r\n    var params = {\r\n        screen_name: userName,\r\n        cursor: cursor,\r\n        count: 200\r\n    }\r\n    return getCall('findfriends', params);\r\n};","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport twitterAvatar from './static/twitter_square_blue.svg'\nimport './App.css';\nimport { InputAdornment, Avatar, Typography, Grid, TextField, Button, Divider } from '@material-ui/core';\nimport CommonFriends from './components/CommonFriends';\nimport { findUsers, findFriends } from './services/userCalls'\n\n\nconst userInitialState = {\n  avatar: twitterAvatar,\n  id: '',\n  disabled: false,\n  screen_name: '',\n  error: false,\n  error_msg: '',\n  friends: [],\n  friends_count: 0\n}\n\nconst cFriendsInitialState = {\n  loading: false,\n  loaded: false,\n  ready: true,\n  empty: false,\n  cfriends: [],\n  cfriend_count: 0\n}\n\nconst buttonInitialState = {\n  disabled: true,\n  label: 'Not ready'\n}\n\nfunction App() {\n  const [buttonState, setButtonState] = useState(buttonInitialState)\n  const [user1, setUser1] = useState(userInitialState);\n  const [user2, setUser2] = useState(userInitialState);\n  const [cFriends, setCFriends] = useState(cFriendsInitialState);\n\n  const validateUserLength = () => {\n    if(user1.screen_name.length > 0 && user2.screen_name.length > 0){\n      setButtonState({\n        disabled: false,\n        label: 'Let\\'s Go!!'\n      });\n      return true;\n    }else{\n      setButtonState({\n        disabled: true,\n        label: 'Not ready'\n      });\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    // check if the both usernames are given to ready the button\n    validateUserLength();\n  },\n  [user1.screen_name, user2.screen_name])\n\n  const handleUser1Change = (event) => {\n    setUser1({...user1, screen_name: event.target.value});\n  }\n\n  const handleUser2Change = (event) => {\n    setUser2({...user2, screen_name: event.target.value});\n  }\n\n  const getAllFriends = (sname, cursor=-1) => {\n    return findFriends(sname, cursor).then( (response) => {\n      var data = response.data;\n      var friends = data.users;\n      if(data.next_cursor && data.next_cursor!==0){\n        return getAllFriends(sname, cursor=data.next_cursor).then( (users) => {\n          friends.push(...users);\n          return friends;\n        })\n      }else{\n        return friends;\n      }\n    })\n  }\n\n  const finishRace = (u1, u2) => {\n    if(u1){\n      console.log('user 1 found')\n      setUser1({\n        ...userInitialState,\n        avatar: u1.profile_image_url,\n        id: u1.id,\n        screen_name: u1.screen_name,\n        friends_count: u1.friends_count\n      })\n    }else{\n      setUser1({\n        ...userInitialState,\n        error: true,\n        error_msg: 'User not found',\n        screen_name: user1.screen_name\n      })\n    }\n    if(u2){\n      console.log('user 2 found')\n      setUser2({\n        ...userInitialState,\n        avatar: u2.profile_image_url,\n        id: u2.id,\n        screen_name: u2.screen_name,\n        friends_count: u2.friends_count\n      })\n    }else{\n      setUser2({\n        ...userInitialState,\n        error: true,\n        error_msg: 'User not found',\n        screen_name: user2.screen_name\n      })\n    }\n  }\n\n  const letsGO = () => {\n    if(validateUserLength()){\n      setUser1({...user1, disabled: true});\n      setUser2({...user2, disabled: true});\n      findUsers(user1.screen_name, user2.screen_name)\n      .then( (response) => {\n        // array :response.data\n        setCFriends({\n          ...cFriendsInitialState,\n          loaded: false,\n          loading: true\n        })\n        var data = response.data;\n        if (Array.isArray(data)){\n          var u1 = data.find((item) => {return item.screen_name === user1.screen_name});\n          var u2 = data.find((item) => {return item.screen_name === user2.screen_name});\n          if(u1.protected){\n            setUser1({\n              ...userInitialState,\n              error: true,\n              error_msg: 'User is protected',\n              screen_name: user1.screen_name\n            });\n            setCFriends({\n              ...cFriendsInitialState\n            });\n            setUser2({\n              ...userInitialState,\n              screen_name: user2.screen_name\n            });\n          }else{\n            if(u2.protected){\n              setUser2({\n                ...userInitialState,\n                error: true,\n                error_msg: 'User is protected',\n                screen_name: user2.screen_name\n              });\n              setCFriends({\n                ...cFriendsInitialState\n              });\n              setUser1({\n                ...userInitialState,\n                screen_name: user1.screen_name\n              })\n            }else{\n              finishRace(u1, u2)\n              if(data.length === 2){\n\n                Promise.all([\n                  getAllFriends(user1.screen_name),\n                  getAllFriends(user2.screen_name)\n                ]).then( (response) => {\n                  findCommon(response);\n                }).catch( (err) => {\n                  console.error(err);\n                });\n              }\n            }\n          }\n        }else{\n          setUser1({\n            ...user1, \n            error: true,\n            error_msg: 'User does not exist'\n          });\n          setUser1({\n            ...user1, \n            error: true,\n            error_msg: 'User does not exist'\n          });\n        }\n      }).catch( (err) => {\n        \n      });\n    }\n  }\n\n  const normalizeFriends = (f) => {\n    var g = {};\n    f.forEach( (x) => {\n      g[x.id] = {'id': x.id, 'name':x.name, 'key': x.id,\n        'avatar': x.profile_image_url, 'screen_name': x.screen_name\n      };\n    });\n    return g;\n  }\n\n  const findCommon = (friends) => {\n\n    var [f1, f2] = friends\n    var normalized1 = normalizeFriends(f1);\n    var normalized2 = normalizeFriends(f2);\n    var keys1 = Object.keys(normalized1).map( (x) => {return parseInt(x)} )\n    var keys2 = Object.keys(normalized2).map( (x) => {return parseInt(x)} )\n    var [smaller_key_set, large_object] = keys1.length < keys2.length ? [keys1, normalized2] : [keys2, normalized1]\n    \n    var common_friends = [];\n    smaller_key_set.forEach(function(key){\n      if(large_object[key]){\n        common_friends.push(large_object[key]);\n      }\n    });\n    setCFriends({\n      ...cFriendsInitialState,\n      loaded: true,\n      loading: false,\n      cfriends: common_friends,\n      cfriend_count: common_friends.length\n    });\n  }\n\n  return (\n    <div className=\"App\" style={{}}>\n      {/* first container holding first part */}\n      <Grid container direction='column' spacing={0}>\n        \n        {/* first row contains title and subtitle */}\n        <Grid item style={{marginTop: '16px'}}>\n          <Grid \n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            alignContent=\"center\"\n          >\n            <Grid item md={12} >\n              <Typography variant=\"h3\" component=\"h2\" style={{color: 'rgb(29, 161, 242)'}}>\n                Mi Amigos - Su Amigos\n              </Typography>\n              <Typography variant=\"subtitle1\" component=\"span\">\n                Type in you and your friend's twitter handles to find how well connected you are :)\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        \n        {/* Second row contains two inputs */}\n        <Grid item style={{marginTop: '16px'}}>\n          <Grid \n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignContent=\"center\"\n          >\n            <Grid item lg={2} xs={10} sm={5} style={{marginRight: '10px'}}>\n              <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                <Grid item>\n                  <Avatar alt={user1.screen_name} variant=\"rounded\" src={user1.avatar} \n                    style={{height: \"54px\", width: \"54px\", marginRight: \"5px\",\n                    border: '2px solid rgb(29, 161, 242)'}}/>\n                </Grid>\n                <Grid item>\n                  <TextField size=\"medium\" id=\"user1\" value={user1.screen_name} error={user1.error}\n                  onChange={handleUser1Change} disabled={user1.disabled} helperText={user1.error_msg} \n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">@</InputAdornment>,\n                  }}\n                  variant=\"outlined\" ></TextField>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item lg={2} xs={10} sm={5}>\n              <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                <Grid item>\n                  <Avatar alt={user2.screen_name} variant=\"rounded\" src={user2.avatar} \n                    style={{height: \"54px\", width: \"54px\", marginRight: \"5px\",\n                    border: '2px solid rgb(29, 161, 242)'}}/>\n                </Grid>\n                <Grid item>\n                  <TextField size=\"medium\" id=\"user2\" value={user2.screen_name} error={user2.error}\n                  onChange={handleUser2Change} disabled={user2.disabled} helperText={user2.error_msg} \n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">@</InputAdornment>,\n                  }}\n                  variant=\"outlined\"></TextField>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        {/* third row containing button */}\n        <Grid item style={{marginTop: '16px'}}>\n          <Grid container direction=\"row\" justify=\"center\"\n            alignItems=\"center\" alignContent=\"center\" spacing={0}>\n            <Button size=\"large\" variant=\"contained\" disabled={buttonState.disabled} \n              style={{backgroundColor: \"rgb(29, 161, 242)\", color: \"white\"}} \n              onClick={letsGO}>\n              {buttonState.label}\n            </Button>\n          </Grid>\n        </Grid>\n\n        {/* fourth row containing friends */}\n        <Grid item style={{marginTop: '36px'}}>\n          <Grid \n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            alignContent=\"center\"\n            spacing={0}\n          >\n            <Grid item lg={8} sm={10}>\n              <Divider style={{marginBottom: '20px'}}></Divider>\n              <CommonFriends {...cFriends}></CommonFriends>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n       \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}